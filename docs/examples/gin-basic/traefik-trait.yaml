apiVersion: core.oam.dev/v1beta1
kind: TraitDefinition
metadata:
  annotations:
    definition.oam.dev/description: "traefik TraitDefinition"
  name: traefik
spec:
  status:
    healthPolicy: |
      isHealth: len(context.outputs.service.spec.clusterIP) > 0
  appliesToWorkloads:
    - basic
  podDisruptive: false
  schematic:
    cue:
      template: |
        // trait template can have multiple outputs in one trait
        outputs: service: {
        	apiVersion: "v1"
        	kind:       "Service"
        	metadata:
        		name: context.name
        	spec: {
        		selector: {
        			"app.oam.dev/component": context.name
        		}
        		ports: [
        			for k, v in parameter.http {
        				port:       v
        				targetPort: v
        			},
        		]
        	}
        }

        outputs: ingress: {
        	apiVersion: "traefik.containo.us/v1alpha1"
        	kind:       "IngressRoute"
        	metadata:
        		name: context.name
        	spec: {
        		entryPoints: ["web"]
                routes: [
                	for k, v in parameter.http {
                    	{
                    		match: "Host(`\(parameter.domain)`)"
                    		kind: "Rule"
                    		services: [{
                    			name: context.name
                    			port: v
                    		}]
                		}
                	},
                ]
        	}
        }

        parameter: {
        	// +usage=Specify the domain you want to expose
        	domain: string

        	// +usage=Specify the mapping relationship between the http path and the workload port
        	http: [string]: int
        }

